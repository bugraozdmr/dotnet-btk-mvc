@model IEnumerable<Product>

@{
    ViewData["Title"] = "Products";
    Layout = "_Layout";
}

<div class="row">
    <div class="col-md-3">
        @await Component.InvokeAsync("CategoriesMenu")
        @await Component.InvokeAsync("ProductFilterMenu")
        <div products="" number="3"></div>
    </div>
    <div class="col-md-9">
        <div class="row my-3">
            @if (!Model.Count().Equals(0))
            {
                @foreach (var item in @Model)
                {
                    // bu iyice bilgi
                    <partial name="_ProductCard" model="@item"/>
                }
            }
            else
            {
                <div class="text-warning text-center">
                    <h6 class="display-6">There is no product to show.</h6>
                </div>
            }
            
        </div>
    </div>
</div>

@section Top
{
    @{
        DateTime targetTime = DateTime.Now.AddMinutes(1);
    }

    <div id="message-container" class="my-2 text-center">
        New Products Are On Their Way.
    </div>


    <script>
    var pageLoadTime = new Date();
    
    // JavaScript ile belirli aralıklarla kontrol yapma
    setInterval(function () {
        var now = new Date();
        
        if (now < new Date('@targetTime.ToString("yyyy-MM-ddTHH:mm:ss")')) {
            // Belirtilen süre içindeyiz, bir şey yapabilirsiniz.
            document.getElementById('message-container').innerText = 'New Products Are On Their Way.';
        } else {
            // Belirtilen süre geçti, istediğiniz başka bir şey yapabilirsiniz.
            document.getElementById('message-container').innerText = 'Time has passed.';
        }
    }, 1000); // 1000 milisaniye = 1 saniye
    
    // Sayfa kapandığında veya tarayıcı kapandığında kontrol et
    window.onbeforeunload = function () {
        var elapsedTime = new Date() - pageLoadTime;
        alert('User stayed on the page for ' + (elapsedTime / 1000) + ' seconds.');
        // Burada başka bir işlem yapabilirsiniz.
    };
</script>

    
}


